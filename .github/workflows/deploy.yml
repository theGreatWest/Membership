name: Build and Deploy to EC2  # 워크플로우 이름

on:
  push:
    branches: [ "master" ]  # master 브랜치에 푸시될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest  # 최신 우분투 환경에서 실행
    steps:
      # 1. 저장소 코드 가져오기
      - name: Checkout Repository
        uses: actions/checkout@v2

      # 2. Java 11 설치 및 설정
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # 3. Maven으로 빌드 및 테스트 실행
      - name: Build with Maven
        run: mvn clean package  # 프로젝트 정리(clean) 후 패키징(war 생성)

      # 4. 생성된 WAR 파일을 EC2 서버로 전송
      - name: Transfer WAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}       # EC2 퍼블릭 IP (GitHub Secrets)
          username: ubuntu                    # EC2 로그인 사용자명
          key: ${{ secrets.EC2_KEY }}         # SSH 접속용 PEM 키 (GitHub Secrets)
          source: "MembershipMini/target/membership-1.0.0-BUILD-SNAPSHOT.war"               # 로컬 빌드 산출물 경로
          target: "/home/ubuntu"               # EC2 내 전송 위치

      # 5. EC2 서버에 접속해 WAR 파일을 Tomcat 웹앱 폴더로 이동 후 Tomcat 재시작
      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo mv /home/ubuntu/*.war /opt/tomcat9/webapps/  # Tomcat 웹앱 경로로 WAR 이동
            sudo systemctl restart tomcat9                     # Tomcat 서버 재시작
